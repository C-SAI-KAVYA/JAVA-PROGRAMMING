package com.bridgelabz.algorithmprograms;

import java.util.List;

import org.apache.log4j.Logger;
import org.apache.log4j.PropertyConfigurator;

import com.bridgelabz.algorithmprograms.utils.LogsUtility;
import com.bridgelabz.algorithmprograms.utils.OutputUtility;
import com.bridgelabz.algorithmprograms.utils.Utility;
import com.bridgelabz.exceptions.PermutationsCannotBeFoundForNullOrZeroCharacterisedString;
import com.bridgelabz.functionalprograms.utils.InputUtility;

public class StringPermutations {
	public static void main(String[] args) {

		LogsUtility.setLog("StringPermutations");
		Logger logger = LogsUtility.getLog();
		System.setProperty("fname", LogsUtility.FILEPATH + "StringPermutations.log");
		PropertyConfigurator.configure(LogsUtility.CONFIGPATH);

		logger.info("Welcome to the String Permutation finder both using iterative and recursive approach");

		logger.info("Enter any random string to find the permutations of it using recursive and iterative approach");
		String userString = InputUtility.stringVal();

		List<String> iterativeListOfPermutations;
		try {
			iterativeListOfPermutations = Utility.iterativePermutations(userString);
			logger.info("The iterative permutations are as follows");
			OutputUtility.printList(iterativeListOfPermutations);
			String[] recursiveArrayOfPermutations = new String[100];
			logger.info("The recursive permutations are as follows");
			recursiveArrayOfPermutations = Utility.recursivePermutations("", userString);

			boolean equals = Utility.checkIterativeAndRecursivePermutationEquals(iterativeListOfPermutations,
					recursiveArrayOfPermutations);

			if (equals)
				logger.info("The permutations generated by the recursive and iterative methods are equal");
			else
				logger.info("The permutations generated by the recursive and iterative methods are not equal");

		} catch (PermutationsCannotBeFoundForNullOrZeroCharacterisedString e) {
				logger.error(e);
		}
}

}
